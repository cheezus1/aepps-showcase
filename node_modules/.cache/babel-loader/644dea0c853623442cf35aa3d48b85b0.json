{"remainingRequest":"/home/boko/workspace/aepps-showcase/node_modules/babel-loader/lib/index.js!/home/boko/workspace/aepps-showcase/node_modules/eslint-loader/index.js??ref--13-0!/home/boko/workspace/aepps-showcase/src/util/contract_state.js","dependencies":[{"path":"/home/boko/workspace/aepps-showcase/src/util/contract_state.js","mtime":1548321484873},{"path":"/home/boko/workspace/aepps-showcase/node_modules/cache-loader/dist/cjs.js","mtime":1548314526195},{"path":"/home/boko/workspace/aepps-showcase/node_modules/babel-loader/lib/index.js","mtime":1548314526127},{"path":"/home/boko/workspace/aepps-showcase/node_modules/eslint-loader/index.js","mtime":1548314526431}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/boko/workspace/aepps-showcase/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\nvar Crypto = require('@aeternity/aepp-sdk').Crypto;\n\nvar _require = require('@aeternity/aepp-sdk'),\n    EpochChain = _require.EpochChain,\n    EpochContract = _require.EpochContract;\n\nvar stateType = \"(map(int, ((string, string, string, string), int, int, int, map(address, (int, int)), map(string, (list(address), int)) )),map(int, (string, string, string, string)),int,int,int,int,int,map(address, (int, int)))\";\nvar contractAddress = \"ct_2AQEbbkzkpTTrDV9jSg3vyT7qDX7tcHedSaZpAJgtSTvQZRwqJ\";\n\nvar get =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var client, calledAuctionSlots, decodedAuctionSlots;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return EpochChain.compose(EpochContract)({\n              url: \"https://sdk-testnet.aepps.com\",\n              internalUrl: \"https://sdk-testnet.aepps.com\"\n            }).catch(console.error);\n\n          case 2:\n            client = _context.sent;\n            _context.next = 5;\n            return client.contractEpochCall(contractAddress, 'sophia-address', 'get_state', '()').catch(console.error);\n\n          case 5:\n            calledAuctionSlots = _context.sent;\n            _context.next = 8;\n            return client.contractEpochDecodeData(contractAddress, calledAuctionSlots.out).catch(console.error);\n\n          case 8:\n            decodedAuctionSlots = _context.sent;\n            return _context.abrupt(\"return\", decodedAuctionSlots);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function get() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  get: get\n};",{"version":3,"sources":["/home/boko/workspace/aepps-showcase/src/util/contract_state.js"],"names":["Crypto","require","EpochChain","EpochContract","stateType","contractAddress","get","compose","url","internalUrl","catch","console","error","client","contractEpochCall","calledAuctionSlots","contractEpochDecodeData","out","decodedAuctionSlots"],"mappings":";;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,MAA9C;;eACoCC,OAAO,CAAC,qBAAD,C;IAApCC,U,YAAAA,U;IAAYC,a,YAAAA,a;;AAEnB,IAAMC,SAAS,GAAG,qNAAlB;AACA,IAAMC,eAAe,GAAG,uDAAxB;;AAEA,IAAMC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWJ,UAAU,CAACK,OAAX,CAAmBJ,aAAnB,EAAkC;AACjDK,cAAAA,GAAG,iCAD8C;AAEjDC,cAAAA,WAAW;AAFsC,aAAlC,EAGhBC,KAHgB,CAGVC,OAAO,CAACC,KAHE,CADX;;AAAA;AACJC,YAAAA,MADI;AAAA;AAAA,mBAMyBA,MAAM,CAACC,iBAAP,CAAyBT,eAAzB,EAA0C,gBAA1C,EAA4D,WAA5D,EAAyE,IAAzE,EAA+EK,KAA/E,CAAqFC,OAAO,CAACC,KAA7F,CANzB;;AAAA;AAMFG,YAAAA,kBANE;AAAA;AAAA,mBAO0BF,MAAM,CAACG,uBAAP,CAA+BX,eAA/B,EAAgDU,kBAAkB,CAACE,GAAnE,EAAwEP,KAAxE,CAA8EC,OAAO,CAACC,KAAtF,CAP1B;;AAAA;AAOFM,YAAAA,mBAPE;AAAA,6CAUDA,mBAVC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAHZ,GAAG;AAAA;AAAA;AAAA,GAAT;;AAaA,eAAe;AACbA,EAAAA,GAAG,EAAHA;AADa,CAAf","sourcesContent":["const Crypto = require('@aeternity/aepp-sdk').Crypto;\nconst {EpochChain, EpochContract} = require('@aeternity/aepp-sdk')\n\nconst stateType = \"(map(int, ((string, string, string, string), int, int, int, map(address, (int, int)), map(string, (list(address), int)) )),map(int, (string, string, string, string)),int,int,int,int,int,map(address, (int, int)))\";\nconst contractAddress = \"ct_2AQEbbkzkpTTrDV9jSg3vyT7qDX7tcHedSaZpAJgtSTvQZRwqJ\";\n\nconst get = async () => {\n    let client = await EpochChain.compose(EpochContract)({\n        url: `https://sdk-testnet.aepps.com`,\n        internalUrl: `https://sdk-testnet.aepps.com`,\n    }).catch(console.error);\n\n    const calledAuctionSlots = await client.contractEpochCall(contractAddress, 'sophia-address', 'get_state', '()').catch(console.error);\n    const decodedAuctionSlots = await client.contractEpochDecodeData(contractAddress, calledAuctionSlots.out).catch(console.error);\n\n    // TODO: convert to object ?\n    return decodedAuctionSlots;\n  }\n\nexport default {\n  get\n}\n"]}]}